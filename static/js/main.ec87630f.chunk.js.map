{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","clockName","props","debug","clearInterval","className","React","Component","App","hasClock","nameInterval","getRandomName","value","now","toString","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAE3BM,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,cAAcC,OAAO,IAAK,MACvD,OAZP,gCAeE,SAAmBC,GACbA,EAAUC,YAAcT,KAAKU,MAAMD,WAErCL,QAAQO,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDT,KAAKU,MAAMD,cAlBzE,kCAsBE,WACER,OAAOW,cAAcZ,KAAKD,WAvB9B,oBA0BE,WACE,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKU,MAAMD,YAGb,YAED,sBAAMI,UAAU,cAAhB,SACGb,KAAKJ,MAAMC,MAAMS,cAAcC,OAAO,IAAK,YApCtD,GAA2BO,IAAMC,WCDpBC,EAAb,4MACEpB,MAAe,CACbqB,UAAU,EACVR,UAAW,WAHf,EAMES,aAAe,EANjB,EA0BEC,cAAgB,WACd,IAAMC,EAAQtB,KAAKuB,MAAMC,WAAWf,OAAO,GAE3C,MAAM,SAAN,OAAgBa,IA7BpB,uDAQE,WAA2B,IAAD,OACxBpB,KAAKkB,aAAejB,OAAOC,aAAY,WACrC,EAAKC,SAAS,CACZM,UAAW,EAAKU,oBAEjB,MAEHI,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAKvB,SAAS,CAAEc,UAAU,OAG5BM,SAASC,iBAAiB,SAAS,WACjC,EAAKrB,SAAS,CAAEc,UAAU,SAtBhC,oBAgCE,WACE,OACE,sBAAKJ,UAAU,MAAf,UACE,6CAECb,KAAKJ,MAAMqB,UACV,cAAC,EAAD,CAAOR,UAAWT,KAAKJ,MAAMa,mBAtCvC,GAAyBK,IAAMC,WCN/BY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.ec87630f.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  today: Date,\n}\n\ntype Props = {\n  clockName: string;\n};\n\nexport class Clock extends React.Component<Props> {\n  state: State = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ninterface State {\n  hasClock: boolean,\n  clockName: string,\n}\n\nexport class App extends React.Component {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  nameInterval = 0;\n\n  componentDidMount(): void {\n    this.nameInterval = window.setInterval(() => {\n      this.setState({\n        clockName: this.getRandomName(),\n      });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  getRandomName = (): string => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && (\n          <Clock clockName={this.state.clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}